package ac.swen501.bram.BugWorld;

public class Bug {
	private String species;
	private String name;
	private char symbol;
	private int x, y, lastX, lastY;
	private int energy, energyLevel; // the need to feed
	private int ID;
	private int dX, dY;	// speed
	private int worldWidth, worldHeight;
	private boolean isAlive = true,  // is it still alive
			haveTarget = false, // true when hunting for food
			isHungry = false, // true when energy is low and need to eat
			isTargeted = false; // true if this bug is a target of a carnivorous bug
	private int targetX, targetY; // target's location
	private static int uniq = 1;

	public Bug (String species, String name, char symbol, int x, int y, int energy, int ID, int width, int height) 
	{
		this.species = species;
		this.name = name;
		this.symbol = symbol;
		this.x = x;
		this.y = y;
		this.energy = energy;
		this.energyLevel = energy;
		this.ID = uniq++;
		this.dX = (int)(Math.random() * 1) - 1; // either positive (right) / negative (left)
		if(dX == 0) { dX = 1; }
		this.dY = (int)(Math.random() * 1) - 1; // either positive (down) / negative (up)
		if(dY == 0) { dY = 1; }
		//this.dX = 1;
		//this.dY = 1;
		this.worldWidth = width;
		this.worldHeight = height;
	}

	// method called when food is found
	public void eat(int quantity) {
		this.energyLevel += quantity;
		if (this.energyLevel >= this.energy) { this.energyLevel = this.energy; }
		this.isHungry = false; this.haveTarget = false;
	}

	// method to move and set the bug behavior
	public void move() {
		//System.out.println(this.energyLevel + " : " + x + "," + y + " : " + symbol);
		//System.out.println(isHungry + " " + haveTarget + " " + isAlive);
		//System.out.println(targetX + ", " + targetY);
		this.energyLevel--; // move drain energy
		if (this.energyLevel <= (this.energy / 4) * 3) { // get hungry when energy level drop to 3/4 its time
			isHungry = true;
		} else if (this.energyLevel >= this.energy) { // check if energy level higher then default energy after eating
			isHungry = false; haveTarget = false;
			this.energyLevel = this.energy;
		}
		if (this.energyLevel <= 0) { // when energy drop below or 0 then it dies, flag for removal
			isAlive = false;
		}
		if (isHungry & haveTarget) { // movement behavior when the bug is hungry and have targeted a food
			this.lastX = this.x;
			this.lastY = this.y;
			if (this.x < targetX) {
				this.x += Math.abs(this.dX);
			} else if (this.x > targetX) {
				this.x -= Math.abs(this.dX);
			} else {
				this.x += 0;
			}
			if (this.y < targetY) {
				this.y += Math.abs(this.dY);
			} else if (this.y > targetY) {
				this.y -= Math.abs(this.dY);
			} else {
				this.y += 0;
			}

		} else { // movement behavior when the bug is hungry and don't have targeted a food
			this.lastX = this.x; // or when the bug is not hungry
			this.x += this.dX;
			if(this.x < 1 || this.x >= this.worldWidth - 1) {
				this.dX = -this.dX;
				this.x += this.dX;
			}

			this.lastY = this.y;
			this.y += this.dY;
			if(this.y < 1 || this.y >= this.worldHeight - 1) {
				this.dY = -this.dY;
				this.y += this.dY;
			}
		}
	}

	public char symbol() {
		return symbol;
	}

	// MOVEMENT
	public int getX() {
		return x;
	}

	public int getLastX() {
		return lastX;
	}

	public void setX(int x) {
		this.x = x;
	}

	public int getY() {
		return y;
	}

	public int getLastY() {
		return lastY;
	}

	public void setY(int y) {
		this.y = y;
	}
	
	public void goOtherWay() {
		this.dX = -this.dX;
		this.dY = -this.dY;
	}

	// BEHAVIOR TAGS
	public Boolean isHungry() {
		return isHungry;
	}

	public void notHungry() {
		isHungry = false;
	}

	public Boolean haveTarget() {
		return haveTarget;
	}

	public void noTarget() {
		this.haveTarget = false;
	}

	// ALIVE TAG
	public Boolean isAlive() {
		return isAlive;
	}
	
	public int getEaten() {
		//System.out.println(this.symbol + " get eaten");
		int giveEnergy = this.energyLevel;
		this.energyLevel = -1;
		isAlive = false;
		return giveEnergy;
	}
	
	// TARGET TAG
	public boolean isTargeted() {
		return isTargeted;
	}

	public void targeted() {
		isTargeted = true;
	}

	public void setTargetX(int tx) {
		this.targetX = tx;
		this.haveTarget = true;
	}

	public int targetX() {
		return targetX;
	}

	public void setTargetY(int ty) {
		this.targetY = ty;
		this.haveTarget = true;
	}

	public int targetY() {
		return targetY;
	}
	
	public int ID() {
		return this.ID;
	}
	
	public String species() {
		return this.species;
	}
}